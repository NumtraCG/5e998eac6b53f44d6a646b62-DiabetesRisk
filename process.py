import json
import Connectors
import Transformations
import AutoML
try:
    DiabetesRisk_DBFS = Connectors.DBFSConnector.fetch(
        [], {}, "5e998eac6b53f44d6a646b63", spark, "{'url': '/Demo/DiabetesRiskTrain.csv', 'file_type': 'Delimeted', 'dbfs_token': 'dapib8073bbfa952efa9d363b234ce06e2c6', 'dbfs_domain': 'westus.azuredatabricks.net', 'delimiter': ',', 'is_header': 'Use Header Line'}")

except Exception as ex:
    print(ex)
try:
    DiabetesRisk_AutoFE = Transformations.TransformationMain.run(["5e998eac6b53f44d6a646b63"], {"5e998eac6b53f44d6a646b63": DiabetesRisk_DBFS}, "5e998eac6b53f44d6a646b64", spark, json.dumps({"FE": [{"transformationsData": {}, "feature": "PatientID", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "4983.04", "stddev": "2843.91", "min": "9", "max": "9943", "missing": "0"}}, {"transformationsData": {"feature_label": "Gender"}, "feature": "Gender", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "981", "mean": "", "stddev": "", "min": "F", "max": "M", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {}, "feature": "YearOfBirth", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "1957.17", "stddev": "17.62", "min": "1922", "max": "1994", "missing": "0"}}, {"transformationsData": {"feature_label": "City"}, "feature": "City", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "981", "mean": "", "stddev": "", "min": "Aberdeen", "max": "Washington DC", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {"feature_label": "State"}, "feature": "State", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "981", "mean": "", "stddev": "", "min": "AL", "max": "WV", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {}, "feature": "Smoking Status Indicator", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "1.05", "stddev": "1.48", "min": "0", "max": "7", "missing": "0"}}, {"transformationsData": {}, "feature": "Lipitor Atorvastatin", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.05", "stddev": "0.21", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Lisinopril", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.09", "stddev": "0.29", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Simvastatin", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.06", "stddev": "0.23", "min": "0", "max": "1", "missing": "0"}}, {
                                                                 "transformationsData": {}, "feature": "IsAbnormalValue", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.05", "stddev": "0.21", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Benign_essential_hypertension", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.17", "stddev": "0.38", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Lumbago", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.14", "stddev": "0.34", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Mixed_hyperlipidemia", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.24", "stddev": "0.43", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Routine_general_medical_examination_at_a_health_care_facility", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.16", "stddev": "0.37", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "Unspecified_essential_hypertension", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "DMIndicator", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "981", "mean": "0.18", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}}, {"feature": "Gender_transform", "transformation": "", "transformationsData": {}, "type": "numeric", "selected": "True", "stats": {"count": "981", "mean": "0.43", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}}, {"feature": "City_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "981", "mean": "6.24", "stddev": "6.81", "min": "0.0", "max": "37.0", "missing": "0"}}, {"feature": "State_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "981", "mean": "6.29", "stddev": "6.93", "min": "0.0", "max": "39.0", "missing": "0"}}]}))

except Exception as ex:
    print(ex)
try:
    AutoML.functionClassification(DiabetesRisk_AutoFE, ["PatientID", "Gender", "YearOfBirth", "City", "State", "Smoking Status Indicator", "Lipitor Atorvastatin", "Lisinopril", "Simvastatin", "IsAbnormalValue",
                                                        "Benign_essential_hypertension", "Lumbago", "Mixed_hyperlipidemia", "Routine_general_medical_examination_at_a_health_care_facility", "Unspecified_essential_hypertension"], "DMIndicator")

except Exception as ex:
    print(ex)
